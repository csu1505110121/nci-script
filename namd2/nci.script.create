#!/bin/bash

jobname=ADP_ABF
win=01

cnt=31
cntmax=40

while [ ${cnt} -le ${cntmax} ]
do

ncnt=`expr ${cnt} + 1`

if [ ${cnt} -eq 1 ]; then 
	INPUTFILE=xxx
else
	pcnt=`expr ${cnt} - 1`
	INPUTFILE=abf`printf "%02d" ${win}`.`printf "%02d" ${pcnt}`
fi

cat <<EOF > run.NAMD.${cnt}
#!/bin/bash

#PBS -l walltime=12:00:00
#PBS -l mem=5000MB
#PBS -q gpuvolta
#PBS -l ngpus=1
#PBS -l ncpus=12
#PBS -l jobfs=10GB
#PBS -l software=namd
#PBS -l storage=gdata/eh83+scratch/eh83
#PBS -l wd
#PBS -P eh83
#PBS -N $jobname+$win+$cnt

# Running production steps
module load namd/2.14

cat <<EOT > abf`printf "%02d" ${win}`.`printf "%02d" ${cnt}`.conf
#############################################################
## JOB DESCRIPTION                                         ##
#############################################################

# Minimization and Equilibration of
# Ubiquitin in a Water Box

#############################################################
## ADJUSTABLE PARAMETERS                                   ##
#############################################################

structure          ../../output/ionized.psf
coordinates        ../../output/ionized.pdb

set temperature    298
set outputname     abf01.`printf "%02d" $cnt`

firsttimestep      0

if {1} {
set inputname $INPUTFILE
binCoordinates \\\$inputname.restart.coor
binVelocities  \\\$inputname.restart.vel
extendedSystem \\\$inputname.restart.xsc
}

#############################################################
## SIMULATION PARAMETERS                                   ##
#############################################################

# Input
paraTypeCharmm      on
parameters          ../../../../parameters/par_all36_na.prm
parameters          ../../../../parameters/par_water_ions.parm

if {0} {
temperature         \\\$temperature
}

# Force-Field Parameters
exclude             scaled1-4
1-4scaling          1.0
cutoff              12.0
switching           on
switchdist          10.0
pairlistdist        14.0

# Integrator Parameters
timestep            1.0  ;# 2fs/step
rigidBonds          none  ;# needed for 2fs steps
nonbondedFreq       1
fullElectFrequency  2
stepspercycle       10

# Constant Temperature Control
langevin            on    ;# do langevin dynamics
langevinDamping     1     ;# damping coefficient (gamma) of 1/ps
langevinTemp        \\\$temperature
langevinHydrogen    off    ;# don't couple langevin bath to hydrogens

# Periodic Boundary Conditions
if {0} {
cellBasisVector1    40.0    0.   0.0
cellBasisVector2     0.0  40.0   0.0
cellBasisVector3     0.0    0   80.0
#cellOrigin          0.0   0.0  0.0
}

margin 5

# PME (for full-system periodic electrostatics)
PME                 yes
PMEGridSpacing      1.0

#manual grid definition
#PMEGridSizeX        45
#PMEGridSizeY        45
#PMEGridSizeZ        48
 
# Constant Pressure Control (variable volume)
useGroupPressure      no ;# needed for rigidBonds
useFlexibleCell       no
useConstantArea       no

langevinPiston        off
langevinPistonTarget  1.01325 ;#  in bar -> 1 atm
langevinPistonPeriod  100.0
langevinPistonDecay   50.0
langevinPistonTemp    \\\$temperature
 
# Output
outputName          \\\$outputname
 
restartfreq         50000     ;# 5000steps = every 10ps
dcdfreq             50000
xstFreq             50000
outputEnergies      50000
outputPressure      50000    

#############################################################
## EXTRA PARAMETERS                                        ##
#############################################################
if {0} {
fixedAtoms on
fixedAtomsFile ../output/UMP_solv_ion.fix
fixedAtomsCol B
fixedAtomsForces on
}
 
colvars on
colvarsInput  \\\$inputname.restart.colvars.state
colvarsConfig Transport-window.`printf "%02d" ${win}`.in
 
#############################################################
## EXECUTION SCRIPT                                        ##
#############################################################
 
# Minimization
if {0} {
minimize            1000
reinitvels          \\\$temperature
}
 
run 5000000 ;# 10ns                                          

EOT

namd2-gpu abf`printf "%02d" ${win}`.`printf "%02d" ${cnt}`.conf > abf`printf "%02d" ${win}`.`printf "%02d" ${cnt}`.log

# exe the next one
if [ ${cnt} -ne ${cntmax} ]; then
qsub run.NAMD.${ncnt}
fi

EOF

let cnt++
done
